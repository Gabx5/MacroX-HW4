?rnorm
library(posterior)
library(StanHeaders)
library(rstan)
library(bayesforecast)
library(brms)
model_1 <- brm(log(rgdppc_2000) ~ rugged*cont_africa+dist_coast*cont_africa, data=ruggeddata, save_pars = save_pars(all = TRUE))
ruggeddata<-read.csv("rugged_data.csv", header=T, sep = ',', dec ='.' )
model_1 <- brm(log(rgdppc_2000) ~ rugged*cont_africa+dist_coast*cont_africa, data=ruggeddata, save_pars = save_pars(all = TRUE))
table_1<-summary(model_1)
table_1<-table_1$fixed
table_1<-table_1[,1:4]
rownames(table_1)<-c("Intercept", "Ruggedness", "Africa", "Dist to Coast", "Ruggedness x Africa", "Distance to Coast x Africa")
table_1 <-round(table_1, digits=3)
table_1
summary(model_1)
table_1<-summary(model_1)
table_1<-table_1$fixed
table_1<-table_1[,1:4]
rownames(table_1)<-c("Intercept", "Ruggedness", "Africa", "Dist to Coast", "Ruggedness x Africa", "Distance to Coast x Africa")
table_1 <-round(table_1, digits=3)
table_1
post_sample_model_1 <- as_draws_df(model_1, pars =  c("rugged", "rugged:cont_africa"))
plot((post_sample_model_1$b_rugged-post_sample_model_1$`b_rugged:cont_africa`), post_sample_model_1$`b_rugged:cont_africa` , xlab="Effect in the rest of the world",ylab = "Effect in Africa",)
model_2<-brm(log(rgdppc_2000)~rugged*cont_africa , data=ruggeddata, save_pars = save_pars(all = TRUE))
table_2<-summary(model_2)
table_2<-table_2$fixed
table_2<-table_2[,1:4]
rownames(table_2)<-c("Intercept", "Ruggedness", "Africa", "Ruggedness x Africa")
table_2 <-round(table_2, digits=3)
table_2
model_3 <- brm(log(rgdppc_2000)~rugged*cont_africa + log(1+pop_1400)*cont_africa, data=ruggeddata, save_pars = save_pars(all = TRUE))
model_4 <- brm(log(rgdppc_2000)~rugged*cont_africa + dist_coast*cont_africa + log(1+pop_1400)*cont_africa, data=ruggeddata, save_pars = save_pars(all = TRUE))
table_3<-summary(model_3)
table_3<-table_3$fixed
table_3<-table_3[,1:4]
rownames(table_3)<-c("Intercept", "Ruggedness", "Africa", "Population in 1400", "Ruggedness x Africa", "Population in 1400 x Africa")
table_3 <-round(table_3, digits=3)
table_3
model_4 <- brm(log(rgdppc_2000)~rugged*cont_africa + dist_coast*cont_africa + log(1+pop_1400)*cont_africa, data=ruggeddata, save_pars = save_pars(all = TRUE))
table_4<-summary(model_4)
table_4<-table_4$fixed
table_4<-table_4[,1:4]
rownames(table_4)<-c("Intercept", "Ruggedness", "Africa", "Distance to Coast", "Population in 1400",  "Ruggedness x Africa", "Distance to Coast x Africa", "Population in 1400 x Africa")
table_4 <-round(table_4, digits=3)
table_4
MM_model_1 <- bridge_sampler(model_1)
MM_model_2 <- bridge_sampler(model_2)
MM_model_3 <- bridge_sampler(model_3)
MM_model_4 <- bridge_sampler(model_4)
WAIC_model_1 <- waic(model_1)
WAIC_model_2 <- waic(model_2)
WAIC_model_3 <- waic(model_3)
WAIC_model_4 <- waic(model_4)
LOO_model_1 <- loo(model_1)
LOO_model_2 <- loo(model_2)
LOO_model_3 <- loo(model_3)
LOO_model_4 <- loo(model_4)
table_modelselection <- rbind(cbind(MM_model_1$logml, WAIC_model_1$estimates[3,1], LOO_model_1$estimates[3,1]),
cbind(MM_model_2$logml, WAIC_model_2$estimates[3,1], LOO_model_2$estimates[3,1]),
cbind(MM_model_3$logml, WAIC_model_3$estimates[3,1], LOO_model_3$estimates[3,1]),
cbind(MM_model_4$logml, WAIC_model_4$estimates[3,1], LOO_model_4$estimates[3,1]))
colnames(table_modelselection) <- c("Maringal Likelihood", "WAIC", "LOO")
rownames(table_modelselection) <- c("Model 1", "Model 2", "Model 3", "Model 4")
table_modelselection
model_51 <- brm(log(rgdppc_2000) ~ rugged, data=ruggeddata, save_pars = save_pars(all = TRUE),
prior =c(set_prior("normal(0,1)", class = "Intercept"),
set_prior("normal(0,1)", class = "b"),
set_prior("inv_gamma(0.5, 3)", class="sigma")))
model_52 <- brm(log(rgdppc_2000) ~ rugged, data=ruggeddata, save_pars = save_pars(all = TRUE),
prior =c(set_prior("normal(5,1)", class = "Intercept"),
set_prior("normal(5,1)", class = "b"),
set_prior("inv_gamma(0.5, 3)", class="sigma")))
model_53 <- brm(log(rgdppc_2000) ~ rugged, data=ruggeddata, save_pars = save_pars(all = TRUE),
prior =c(set_prior("normal(10,1)", class = "Intercept"),
set_prior("normal(10,1)", class = "b"),
set_prior("inv_gamma(0.5, 3)", class="sigma")))
round(summary(model_51)$fixed[,1:2], digits=4)
round(summary(model_52)$fixed[,1:2], digits=4)
round(summary(model_53)$fixed[,1:2], digits=4)
model_54 <- brm(log(rgdppc_2000) ~ rugged, data=ruggeddata, save_pars = save_pars(all = TRUE),
prior =c(set_prior("normal(0,0.0001)", class = "Intercept"),
set_prior("normal(0,0.0001)", class = "b"),
set_prior("inv_gamma(0.5, 3)", class="sigma")))
model_55 <- brm(log(rgdppc_2000) ~ rugged, data=ruggeddata, save_pars = save_pars(all = TRUE),
prior =c(set_prior("normal(0, 0.001)", class = "Intercept"),
set_prior("normal(0, 0.001)", class = "b"),
set_prior("inv_gamma(0.5, 3)", class="sigma")))
model_56 <- brm(log(rgdppc_2000) ~ rugged, data=ruggeddata, save_pars = save_pars(all = TRUE),
prior =c(set_prior("normal(0,1)", class = "Intercept"),
set_prior("normal(0,1)", class = "b"),
set_prior("inv_gamma(0.5, 3)", class="sigma")))
model_57 <- brm(log(rgdppc_2000) ~ rugged, data=ruggeddata, save_pars = save_pars(all = TRUE),
prior =c(set_prior("normal(0,100)", class = "Intercept"),
set_prior("normal(0,100)", class = "b"),
set_prior("inv_gamma(2, 3)", class="sigma")))
round(summary(model_54)$fixed[,1:2], digits=4)
round(summary(model_55)$fixed[,1:2], digits=4)
round(summary(model_56)$fixed[,1:2], digits=4)
round(summary(model_57)$fixed[,1:2], digits=4)
round(summary(model_58)$fixed[,1:2], digits=4)
model_58 <- brm(log(rgdppc_2000) ~ rugged, data=ruggeddata, save_pars = save_pars(all = TRUE),
prior =c(set_prior("normal(0,1)", class = "Intercept"),
set_prior("normal(0,1)", class = "b"),
set_prior("inv_gamma(0.5, 3)", class="sigma")))
model_59 <- brm(log(rgdppc_2000) ~ rugged, data=ruggeddata, save_pars = save_pars(all = TRUE),
prior =c(set_prior("normal(0,1)", class = "Intercept"),
set_prior("normal(0,1)", class = "b"),
set_prior("inv_gamma(3, 3)", class="sigma")))
model_510 <- brm(log(rgdppc_2000) ~ rugged, data=ruggeddata, save_pars = save_pars(all = TRUE),
prior =c(set_prior("normal(0,1)", class = "Intercept"),
set_prior("normal(0,1)", class = "b"),
set_prior("inv_gamma(9, 3)", class="sigma")))
model_511 <- brm(log(rgdppc_2000) ~ rugged, data=ruggeddata, save_pars = save_pars(all = TRUE),
prior =c(set_prior("normal(0,1)", class = "Intercept"),
set_prior("normal(0,1)", class = "b"),
set_prior("inv_gamma(0.5, 0.2)", class="sigma")))
model_512 <- brm(log(rgdppc_2000) ~ rugged, data=ruggeddata, save_pars = save_pars(all = TRUE),
prior =c(set_prior("normal(0,1)", class = "Intercept"),
set_prior("normal(0,1)", class = "b"),
set_prior("inv_gamma(0.5, 0.5)", class="sigma")))
model_513 <- brm(log(rgdppc_2000) ~ rugged, data=ruggeddata, save_pars = save_pars(all = TRUE),
prior =c(set_prior("normal(0,1)", class = "Intercept"),
set_prior("normal(0,1)", class = "b"),
set_prior("inv_gamma(0.5, 1)", class="sigma")))
MM_model_51 <- bridge_sampler(model_51)
MM_model_52 <- bridge_sampler(model_52)
MM_model_53 <- bridge_sampler(model_53)
MM_model_54 <- bridge_sampler(model_54)
MM_model_55 <- bridge_sampler(model_55)
MM_model_56 <- bridge_sampler(model_56)
MM_model_57 <- bridge_sampler(model_57)
MM_model_58 <- bridge_sampler(model_58)
MM_model_59 <- bridge_sampler(model_59)
MM_model_510 <- bridge_sampler(model_510)
MM_model_511 <- bridge_sampler(model_511)
MM_model_512 <- bridge_sampler(model_512)
MM_model_513 <- bridge_sampler(model_513)
table_modelselection2 <- rbind(MM_model_51$logml,
MM_model_52$logml,
MM_model_53$logml,
MM_model_54$logml,
MM_model_55$logml,
MM_model_56$logml,
MM_model_57$logml,
MM_model_58$logml,
MM_model_59$logml,
MM_model_510$logml,
MM_model_511$logml,
MM_model_512$logml,
MM_model_53$logml)
rownames(table_modelselection2) <- c("Model1",
"Model2",
"Model3",
"Model4",
"Model5",
"Model6",
"Model7",
"Model8",
"Model9",
"Model10",
"Model11",
"Model12",
"Model13")
colnames(table_modelselection2) <- c("Marginal Likelihood")
round(summary(model_511)$fixed[,1:2], digits=4)
round(summary(model_512)$fixed[,1:2], digits=4)
round(summary(model_513)$fixed[,1:2], digits=4)
MM_model_51 <- bridge_sampler(model_51)
MM_model_52 <- bridge_sampler(model_52)
MM_model_53 <- bridge_sampler(model_53)
MM_model_54 <- bridge_sampler(model_54)
MM_model_55 <- bridge_sampler(model_55)
MM_model_56 <- bridge_sampler(model_56)
MM_model_57 <- bridge_sampler(model_57)
MM_model_58 <- bridge_sampler(model_58)
MM_model_59 <- bridge_sampler(model_59)
MM_model_510 <- bridge_sampler(model_510)
MM_model_511 <- bridge_sampler(model_511)
MM_model_512 <- bridge_sampler(model_512)
MM_model_513 <- bridge_sampler(model_513)
table_modelselection2 <- rbind(MM_model_51$logml,
MM_model_52$logml,
MM_model_53$logml,
MM_model_54$logml,
MM_model_55$logml,
MM_model_56$logml,
MM_model_57$logml,
MM_model_58$logml,
MM_model_59$logml,
MM_model_510$logml,
MM_model_511$logml,
MM_model_512$logml,
MM_model_53$logml)
rownames(table_modelselection2) <- c("Model1",
"Model2",
"Model3",
"Model4",
"Model5",
"Model6",
"Model7",
"Model8",
"Model9",
"Model10",
"Model11",
"Model12",
"Model13")
colnames(table_modelselection2) <- c("Marginal Likelihood")
table_modelselection2
table_modelselection2
MM_model_2$logml/MM_model_3$logml
MM_model_2$logml/MM_model_4$logml
MM_model_3$logml/MM_model_2$logml
MM_model_3$logml/MM_model_4$logml
MM_model_4$logml/MM_model_2$logml
MM_model_4$logml/MM_model_3$logml
model_PPD <- brm(log(rgdppc_2000) ~ rugged, data=ruggeddata, save_pars = save_pars(all = TRUE),
prior =c(set_prior("normal(0,1)", class = "Intercept"),
set_prior("normal(0,1)", class = "b"),
set_prior("inv_gamma(2, 3)", class="sigma")))
prediction1 <- posterior_predict(model_PPD, newdata = data.frame(rugged = c(1)) , ndraws=1000)
prediction2 <- posterior_predict(model_PPD, newdata = data.frame(rugged = c(2)) , ndraws=1000)
prediction3 <- posterior_predict(model_PPD, newdata = data.frame(rugged = c(3)) , ndraws=1000)
par(mfrow=c(1,3))
plot(density(prediction1), main = "Prediciton for rugged = 1")
plot(density(prediction2), main = "Prediciton for rugged = 2")
plot(density(prediction3), main = "Prediciton for rugged = 3")
?waic
?loo
?WAIC
detach("package:brms", unload = TRUE) #we detach it, as set_prior() function is in both brms & bayesforecast
library(bayesforecast)
UNRATE <- read.csv("UNRATE.csv", header=T, sep = ',', dec ='.' )
detach("package:brms", unload = TRUE) #we detach it, as set_prior() function is in both brms & bayesforecast
detach("package:brms", unload = TRUE) #we detach it, as set_prior() function is in both brms & bayesforecast
#detach("package:brms", unload = TRUE) #we detach it, as set_prior() function is in both brms & bayesforecast
library(bayesforecast)
UNRATE <- read.csv("UNRATE.csv", header=T, sep = ',', dec ='.' )
UNRATE <- UNRATE[,2]
UNRATE <- ts(UNRATE, start = c(1948, 1), frequency = 12)
plot(UNRATE)
demeaned_UNRATE <- UNRATE - mean(UNRATE)
plot(demeaned_UNRATE)
N01_AR <- Sarima(demeaned_UNRATE, order = c(1,0,0), seasonal = c(0,0,0))
N01_AR <- set_prior(model=N01_AR, par="ar", normal(0,1))
N01_FITAR <- varstan(N01_AR)
check_residuals(N01_FITAR)
plot(N01_FITAR)
?varstan
N11_AR <- Sarima(demeaned_UNRATE, order = c(1,0,0), seasonal = c(0,0,0) )
N11_AR <- set_prior(model=N11_AR, par="ar", normal(1,1))
N11_FITAR <- varstan(N11_AR)
check_residuals(N11_FITAR)
plot(N11_FITAR)
B0101_AR <- Sarima(demeaned_UNRATE, order = c(1,0,0), seasonal = c(0,0,0) )
B0101_AR <- set_prior(model=B0101_AR, par="ar", beta(0.1,0.1))
B0101_FITAR <- varstan(B0101_AR)
check_residuals(B0101_FITAR)
plot(B0101_FITAR)
B11_AR <- Sarima(demeaned_UNRATE, order = c(1,0,0), seasonal = c(0,0,0) )
B11_AR <- set_prior(model=B11_AR, par="ar", beta(1,1))
B11_FITAR <- varstan(B11_AR)
check_residuals(B11_FITAR)
plot(B11_FITAR)
B1010_AR <- Sarima(demeaned_UNRATE, order = c(1,0,0), seasonal = c(0,0,0) )
B1010_AR <- set_prior(model=B1010_AR, par="ar", beta(10,10))
B1010_FITAR <- varstan(B1010_AR)
check_residuals(B1010_FITAR)
plot(B1010_FITAR)
N01 <- rnorm(1000000, 0, 1)
N11 <- rnorm(1000000, 1, 1)
hist(N01, col = adjustcolor("yellow"), xlab = expression(mu), freq = F, main = "Normal priors", xlim = c(-4, 6))
hist(N11, col = adjustcolor("green", alpha.f = 0.5), add = TRUE, freq = F)
legend("topright", legend = c("N(0, 1)", "N(1, 1)"), col = c("yellow", "green"), lty = 1, lwd = 4)
BETA0101 <- rbeta(1000000, 0.1, 0.1)
BETA11 <- rbeta(1000000, 1, 1)
BETA1010 <- rbeta(1000000, 10, 10)
hist(BETA0101, col = adjustcolor("yellow"), xlab = expression(mu), freq = F, main = "Beta priors", xlim= c(0,1))
hist(BETA11, col = adjustcolor("blue", alpha.f = 0.5), add = TRUE, freq = F)
hist(BETA1010, col = adjustcolor("green", alpha.f = 0.5), add = TRUE, freq = F)
legend("topright", legend = c("B(0.1, 0.1)", "B(1, 1)", "B(10, 10)"), col = c("yellow", "blue", "green"), lty = 1, lwd = 4)
mcmc_plot(N01_FITAR, pars = "ar")
mcmc_plot(N11_FITAR, pars = "ar")
mcmc_plot(B0101_FITAR, pars = "ar")
mcmc_plot(B11_FITAR, pars = "ar")
mcmc_plot(B1010_FITAR, pars = "ar")
?rbeta
if(suppressWarnings(!require(bvarsv))){
install.packages("bvarsv")
}
if(suppressWarnings(!require(MCMCpack))){
install.packages("MCMCpack")
}
if(suppressWarnings(!require(magic))){
install.packages("magic")
}
library(vars)
library(varexternalinstrument)
data(GKdata)
gkvar <- VAR(GKdata[, c("logip", "logcpi", "gs1", "ebp")], p = 12, type = "const")
shockcol <- externalinstrument(gkvar, GKdata$ff4_tc, "gs1")
library(vars)
library(varexternalinstrument)
install.packages("varexternalinstrument")
library(varexternalinstrument)
data(GKdata)
gkvar <- VAR(GKdata[, c("logip", "logcpi", "gs1", "ebp")], p = 12, type = "const")
knitr::opts_chunk$set(echo = TRUE)
library(tseries) #for adf.test
library(vars)
library(stargazer)
library(msbvar)
install.packages("C:/Users/gabri/OneDriveWU/Gab/WU/Master/4. Semester/MCF/RP_MCF/MSBVAR_0.9-3.zip", repos = NULL, type = "win.binary")
install_github("cran/MSBVAR")
library(devtools)
install_github("cran/MSBVAR")
library(msbvar)
#library(devtools)
#install_github("cran/MSBVAR")
library(MSBVAR)
Examples
## Not run:
# Simple replication of Hamilton (1989) as in
# Kim and Nelson (1999: 79, 220)
data(HamiltonGDP)
set.seed(214)
m2 <- msbvar(HamiltonGDP, p=1, h=2,
lambda0=0.8, lambda1=0.15, lambda3=1, lambda4=0.25,
lambda5=1, mu5=0, mu6=0, qm=12,
alpha.prior=c(100, 30)*diag(2) +
matrix(12, 2, 2), prior=0, max.iter=30,
initialize.opt=NULL)
# Now plot the filtered probabilities of a recession
# Compare to Kim and Nelson (1999: 79, 220)
fp.rec <- ts(m2$fp[,1], start=tsp(HamiltonGDP)[1],
freq=tsp(HamiltonGDP)[3])
plot(fp.rec)
## End(Not run)
m2
fp.rec
summary(m2)
View(m2)
coef(m2)
plot(fp.rec)
summary(m2)
setwd("C:/Users/gabri/OneDriveWU/Github/MacroX-HW4/part1")
setwd("C:/Users/gabri/OneDriveWU/Github/MacroX-HW4/part1/Screenshots")
